version: '3.9'

services:
  dynamodb-local:
   command: "-jar DynamoDBLocal.jar -sharedDb -inMemory -cors *"
   image: "amazon/dynamodb-local:latest"
   container_name: dynamodb-local
   ports:
     - "8000:8000"
   volumes:
     - "./docker/dynamodb:/home/dynamodblocal/data"
   working_dir: /home/dynamodblocal


  auth:
    build: .
    depends_on:
     - "dynamodb-local"
    links:
     - "dynamodb-local"
    container_name: auth
    restart: always
    entrypoint: sleep infinity
    ports: 
      - 3333:3333
    volumes:
      - .:/usr/app



  zookeeper:
    image: wurstmeister/zookeeper:latest
    ports:
      - "2181:2181"


  kafka:
    image: wurstmeister/kafka:2.11-1.1.1
    ports:
      - "9092:9092"
    links:
      - zookeeper
    environment:
      KAFKA_ADVERTISED_HOST_NAME: ${HOST_IP}
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_DELETE_TOPIC_ENABLE: 'true'
      KAFKA_CREATE_TOPICS: "topic-test:1:1"
      KAFKA_LISTENERS: EXTERNAL_SAME_HOST://:29092,INTERNAL://:9092
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:9092,EXTERNAL_SAME_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL_SAME_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock


  rabbitmq:
      image: rabbitmq:latest
      container_name: rabbitmq
      ports: 
        - 25672:25672
        - 15672:15672
      volumes:
        - /docker_conf/rabbitmq/data/:/var/lib/rabbitmq/
      environment:
        - RABBITMQ_DEFAULT_USER = admin
        - RABBITMQ_DEFAULT_PASS = passw123
      restart: always